@page "/vendor/{Id:int}/delete"
@inject Services.IVendorService vendorService
@inject NavigationManager NavManager
@using Anthurium.Web.Pages
@using Anthurium.API.Dtos
@inject IToastService toastService

<h4>Are you sure you want to delete this?</h4>

@if (vendor == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row m-2">
        <table class="table table-hover table-responsive table-striped">
            <thead>

                <tr>
                    <th scope="col">Record Type</th>
                    <th scope="col">Record Info</th>
                </tr>


            </thead>
            <tbody>
                <tr>
                    <th scope="row">Id</th>
                    <td>@vendor.VendorId</td>
                </tr>
                <tr>
                    <th class="info">Vendor Name</th>
                    <td>@vendor.VendorName</td>
                </tr>
                <tr>
                    <th class="info">Vendor Code</th>
                    <td>@vendor.VendorCode</td>
                </tr>

            </tbody>

        </table>
        <!--TODO Add warning on how many job order and  job quotations here-->
    </div>
    <div class="row m-2">
        <div class="col-12">
            <button @onclick="OnDeleteButtonClick" class="btn btn-danger btn-sm">Yes</button>
            <a class="btn btn-primary active btn-sm " role="button" aria-pressed="true" href="/vendor">Return to List</a>
        </div>
    </div>
}



@code {
    [Parameter]
    public int Id { get; set; }

    private VendorReadDto vendor;

    protected override async Task OnInitializedAsync()
    {
        vendor = await vendorService.GetVendorByIdAsync(Id);
    }

    private async void OnDeleteButtonClick()
    {

        await vendorService.DeleteVendorByIdAsync(Id);
        toastService.ShowWarning($"vendor : {vendor.VendorName} is deleted.");
        NavManager.NavigateTo("/vendor");
    }
}
