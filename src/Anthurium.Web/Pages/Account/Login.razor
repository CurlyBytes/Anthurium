@page "/account/login"
@inject Services.IAccountService AccountService
@inject Services.IAlertService AlertService
@inject NavigationManager NavigationManager
@using Models.Account
@using Models

<div class="row justify-content-center bg-gradient-lightsail">
    <div class="col-md-9" style="height: 90vh;">
        <div class="card o-hidden border-0 shadow-lg my-5 login-card-middle">
            <div class="card-body p-0">
                <div class="row">
                    <div class="col-lg-6 d-lg-block bg-login-image"><span style="display: inline-block; height: 100%; vertical-align: middle;"></span><img src="./img/lightsailits_aad.png"  alt="lightsail it solutions logo" style="width: 100%; vertical-align: middle;"></div>
                    <div class="col-lg-6">
                        <div class="p-3">
                            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                                <DataAnnotationsValidator />
                                <div class="form-group">
                                    <label>Username</label>
                                    <InputText @bind-Value="model.Username" class="form-control form-control-user" />
                                    <ValidationMessage For="@(() => model.Username)" />
                                </div>
                                <div class="form-group">
                                    <label>Password</label>
                                    <InputText @bind-Value="model.Password" type="password" class="form-control form-control-user" />
                                    <ValidationMessage For="@(() => model.Password)" />
                                </div>
                                <button disabled="@loading" class="btn btn-lightsail btn-user btn-block bg-lightsail login-btn">
                                    @if (loading)
                                    {
                                        <span class="spinner-border spinner-border-sm mr-1"></span>
                                    }
                                    Login
                                </button>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Models.Account.Login model = new Models.Account.Login();
    private bool loading;

    private async void OnValidSubmit()
    {
        // reset alerts on submit
        AlertService.Clear();

        loading = true;
        try
        {
            await AccountService.Login(model);

            //  var returnUrl = NavigationManager.("returnUrl") ?? "";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
            loading = false;
            StateHasChanged();
        }
    }
}