@inject Services.IItemService itemService
@using Anthurium.API.Dtos
@using Models

<div class="container">
    <div class="row m-2">
        <div class="col"><h3>Item:</h3></div>
        <div class=" col-sm-3 text-right"><a href="/item/create" class="btn btn-primary">New Item</a></div>
    </div>
    @if (itemReadDto == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <!--Todo Add search keywords here-->
        <div class="row m-2">
            <div class="col-sm-8">
                <h4>Showing @(skip + 1) - @(Math.Min(skip + ListPrefsProvider.listPrefs.NumResults, matchingCount)) of @matchingCount</h4>
            </div>
            <div class="col-sm-4 text-right">
                <div class="row form-group">
                    <label for="sortBy" class="col-form-label col-form-label-sm col">Sort by:</label>
                    <select id="sortBy" class="form-control form-control-sm" style="width:auto;" @onchange="ChangeOrder">
                        <option value="ItemId" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemId")>ID (Asc)</option>
                        <option value="ItemId desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemId Desc")>ID (Desc)</option>
                        <option value="ItemName" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemName")>Item Name (A - Z)</option>
                        <option value="ItemName desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemName desc")>Item Name (Z - A)</option>
                        <option value="ItemCode" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemCode")>Item Code (A - Z)</option>
                        <option value="ItemCode desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemCode desc")>Item Code (Z - A)</option>

                        <option value="ItemGroup" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemGroup")>Item Group (A - Z)</option>
                        <option value="ItemGroup desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemGroup desc")>Item Group (Z - A)</option>
                        <option value="ItemType" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemType")>Item Type (A - Z)</option>
                        <option value="ItemType desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ItemType desc")>Item Type (Z - A)</option>
                  
                        <option value="DateCreated" selected=@(ListPrefsProvider.listPrefs.OrderBy=="DateCreated")>Date Created (Asc)</option>
                        <option value="DateCreated Desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="DateCreated Desc")>Date Created (Desc)</option>
                        <option value="DateUpdated" selected=@(ListPrefsProvider.listPrefs.OrderBy=="DateUpdated")>Date Updated (Asc)</option>
                        <option value="DateUpdated Desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="DateUpdated Desc")>Date Updated (Desc)</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="row  m-2">
            <table class="col-12 table table-hover table-responsive table-striped">
                <caption>List of Item</caption>
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Item Type</th>
                        <th scope="col">Item Group</th>
                        <th scope="col">Item Code</th>
                        <th scope="col">Item Name</th>
                        <th scope="col">Local Material</th>
                        <th scope="col">Warranty Date</th>
                        <th scope="col">Warehouse Name</th>
                        <th scope="col" colspan="3">Operations</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var itemReadDtoItem in itemReadDto)
                    {
                        <tr>
                            <td scope="row">@itemReadDtoItem.ItemId</td>
                            <td>@itemReadDtoItem.ItemType</td>
                            <td>@itemReadDtoItem.ItemGroup</td>
                            <td>@itemReadDtoItem.ItemCode</td>
                            <td>@itemReadDtoItem.ItemName</td>
                   
                            <td>@itemReadDtoItem.Warehouse.WarehouseName</td>

                            <td><a class="btn btn-info btn-sm" href="/item/@itemReadDtoItem.ItemId">View</a></td>
                            <td><a class="btn btn-secondary btn-sm" href="/item/@itemReadDtoItem.ItemId/edit">Edit</a></td>
                            <td><a class="btn btn-danger btn-sm" href="/item/@itemReadDtoItem.ItemId/delete">Delete</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="row m-2">
            <div class="col-sm-8">
                <button @onclick=PreviousPage class="btn btn-sm btn-outline-secondary" disabled=@(skip == 0)>
                    <span class="oi oi-chevron-left" aria-hidden="true"></span> Prev
                </button>

                <span class="btn">Page @((skip / ListPrefsProvider.listPrefs.NumResults) + 1)</span>

                @if (ListPrefsProvider.listPrefs.NumResults + skip < matchingCount)
                {
                    <button @onclick=NextPage class="btn btn-sm btn-outline-secondary">
                        Next <span class="oi oi-chevron-right" aria-hidden="true"></span>
                    </button>
                }
            </div>
            <div class="col-sm-4 text-right">
                <div class="row form-group">
                    <label for="numResults" class="col-form-label col-form-label-sm col">Show:</label>
                    <select id="numResults" class="form-control form-control-sm" style="width:auto;" @onchange="ChangeTop">
                        <option value="10" selected=@(ListPrefsProvider.listPrefs.NumResults==10)>10</option>
                        <option value="25" selected=@(ListPrefsProvider.listPrefs.NumResults==25)>25</option>
                        <option value="50" selected=@(ListPrefsProvider.listPrefs.NumResults==50)>50</option>
                    </select>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<ItemReadDto> itemReadDto;
    private int matchingCount;

    [CascadingParameter]
    private ItemListParent ListPrefsProvider { get; set; }

    private int skip = 0;


    private async Task FetchListAsync()
    {
        var response = await itemService.GetItemsAsync(ListPrefsProvider.listPrefs.OrderBy, skip, ListPrefsProvider.listPrefs.NumResults);
        itemReadDto = response.Item;
        matchingCount = response.Count;
    }

    protected override async Task OnInitializedAsync()
    {
        await FetchListAsync();
    }

    private async Task ChangeOrder(ChangeEventArgs e)
    {
        ListPrefsProvider.listPrefs.OrderBy = e.Value.ToString();
        await ListPrefsProvider.SavePrefsAsync();
        skip = 0; //back to first page
        await FetchListAsync();
    }

    private async Task ChangeTop(ChangeEventArgs e)
    {
        ListPrefsProvider.listPrefs.NumResults = int.Parse(e.Value.ToString());
        await ListPrefsProvider.SavePrefsAsync();
        skip = 0; //back to first page
        await FetchListAsync();
    }

    private async Task PreviousPage()
    {
        skip -= ListPrefsProvider.listPrefs.NumResults;
        await FetchListAsync();
    }

    private async Task NextPage()
    {
        skip += ListPrefsProvider.listPrefs.NumResults;
        await FetchListAsync();
    }
}
