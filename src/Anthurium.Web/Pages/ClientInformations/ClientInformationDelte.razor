@page "/clientinformation/{Id:int}/delete"
@inject Services.ClientInformationService clientInformationService
@inject NavigationManager NavManager
@using Anthurium.Web.Pages
@using Anthurium.API.Dtos
@inject IToastService toastService

<h4>Are you sure you want to delete this?</h4>

@if (clientInformation == null)
{
    <p><em>Loading...</em></p>
}
else
{
<div class="row m-2">
    <table class="table table-hover table-responsive table-striped">
        <thead>

            <tr>
                <th scope="col">Record Type</th>
                <th scope="col">Record Info</th>
            </tr>


        </thead>
        <tbody>
            <tr>
                <th scope="row">Id</th>
                <td>@clientInformation.ClientInformationId</td>
            </tr>
            <tr>
                <th class="info">Company Name</th>
                <td>@clientInformation.CompanyName</td>
            </tr>
            <tr>
                <th class="info">Company Address</th>
                <td>@clientInformation.CompanyAddress</td>
            </tr>
            <tr>
                <th class="info">Contact Person</th>
                <td>@clientInformation.ContactPerson</td>
            </tr>
            <tr>
                <th class="info">Contact Number</th>
                <td>@clientInformation.ContactNumber</td>
            </tr>
            <tr>
            <th class="info">Email Address</th>
                <td>@clientInformation.ContactEmailAddress</td>
            </tr>
        </tbody>

    </table>
    <!--TODO Add warning on how many job order and  job quotations here-->
</div>
    <div class="row m-2">
        <div class="col-12">
            <button @onclick="OnDeleteButtonClick" class="btn btn-danger btn-sm">Yes</button>
            <a class="btn btn-primary active btn-sm " role="button" aria-pressed="true" href="/clientinformation">Return to List</a>
        </div>
    </div>
}



@code {
    [Parameter]
    public int Id { get; set; }

    private ClientInformationReadDto clientInformation;

    protected override async Task OnInitializedAsync()
    {
        clientInformation = await clientInformationService.GetClientInformationByIdAsync(Id);
    }

    private async void OnDeleteButtonClick()
    {

        await clientInformationService.DeleteClientInformationByIdAsync(Id);
        toastService.ShowWarning($"client information: {clientInformation.CompanyName} is deleted.");
        NavManager.NavigateTo("/clientinformation");
    }
}
