@inject Services.IClientInformationService clientInformationService
@using Anthurium.API.Dtos
@using Models

<div class="container">
    <div class="row m-2">
        <div class="col"><h3>Client Informations:</h3></div>
        <div class=" col-sm-3 text-right"><a href="/clientinformation/create" class="btn btn-primary">New Client</a></div>
    </div>
    @if (clientInformationReadDto == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <!--Todo Add search keywords here-->
        <div class="row m-2">
            <div class="col-sm-8">
                <h4>Showing @(skip + 1) - @(Math.Min(skip + ListPrefsProvider.listPrefs.NumResults, matchingCount)) of @matchingCount</h4>
            </div>
            <div class="col-sm-4 text-right">
                <div class="row form-group">
                    <label for="sortBy" class="col-form-label col-form-label-sm col">Sort by:</label>
                    <select id="sortBy" class="form-control form-control-sm" style="width:auto;" @onchange="ChangeOrder">
                        <option value="ClientInformationId" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ClientInformationId")>ID (Asc)</option>
                        <option value="ClientInformationId desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ClientInformationId Desc")>ID (Desc)</option>
                        <option value="CompanyName" selected=@(ListPrefsProvider.listPrefs.OrderBy=="CompanyName")>Company Name (A - Z)</option>
                        <option value="CompanyName desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="CompanyName desc")>Company Name (Z - A)</option>
                        <option value="CompanyAddress" selected=@(ListPrefsProvider.listPrefs.OrderBy=="CompanyName")>Company Address (A - Z)</option>
                        <option value="CompanyAddress desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="CompanyName desc")>Company Address (Z - A)</option>

                        <option value="ContactPerson" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ContactPerson")>Contact Person (A - Z)</option>
                        <option value="ContactPerson Desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ContactPerson Desc")>Contact Person (Z - A)</option>
                        <option value="ContactNumber" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ContactNumber")>Contact Number (A - Z)</option>
                        <option value="ContactNumber Desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ContactNumber Desc")>Contact Number (Z - A)</option>
                        <option value="ContactEmailAddress" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ContactEmailAddress")>Contact Email Address (A - Z)</option>
                        <option value="ContactEmailAddress Desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="ContactEmailAddress Desc")>Contact Email Address (Z - A)</option>

                        <option value="DateCreated" selected=@(ListPrefsProvider.listPrefs.OrderBy=="DateCreated")>Date Created (Asc)</option>
                        <option value="DateCreated Desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="DateCreated Desc")>Date Created (Desc)</option>
                        <option value="DateUpdated" selected=@(ListPrefsProvider.listPrefs.OrderBy=="DateUpdated")>Date Updated (Asc)</option>
                        <option value="DateUpdated Desc" selected=@(ListPrefsProvider.listPrefs.OrderBy=="DateUpdated Desc")>Date Updated (Desc)</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="row  m-2">
            <table class="col-12 table table-hover table-responsive table-striped">
                <caption>List of Client Informations</caption>
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Company Name</th>
                        <th scope="col">Company Address</th>
                        <th scope="col">Contact Person</th>
                        <th scope="col">Contact Number</th>
                        <th scope="col">Email Address</th>
                        <th scope="col" colspan="3">Operations</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var clientInformationReadDtoItem in clientInformationReadDto)
                    {
                        <tr>
                            <td scope="row">@clientInformationReadDtoItem.ClientInformationId</td>
                            <td>@clientInformationReadDtoItem.CompanyName</td>
                            <td>@clientInformationReadDtoItem.CompanyAddress</td>
                            <td>@clientInformationReadDtoItem.ContactPerson</td>
                            <td>@clientInformationReadDtoItem.ContactNumber</td>
                            <td>@clientInformationReadDtoItem.ContactEmailAddress</td>
                            <td><a class="btn btn-info btn-sm" href="/clientinformation/@clientInformationReadDtoItem.ClientInformationId">View</a></td>
                            <td><a class="btn btn-secondary btn-sm" href="/clientinformation/@clientInformationReadDtoItem.ClientInformationId/edit">Edit</a></td>
                            <td><a class="btn btn-danger btn-sm" href="/clientinformation/@clientInformationReadDtoItem.ClientInformationId/delete">Delete</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="row m-2">
            <div class="col-sm-8">
                <button @onclick=PreviousPage class="btn btn-sm btn-outline-secondary" disabled=@(skip == 0)>
                    <span class="oi oi-chevron-left" aria-hidden="true"></span> Prev
                </button>

                <span class="btn">Page @((skip / ListPrefsProvider.listPrefs.NumResults) + 1)</span>

                @if (ListPrefsProvider.listPrefs.NumResults + skip < matchingCount)
                {
                    <button @onclick=NextPage class="btn btn-sm btn-outline-secondary">
                        Next <span class="oi oi-chevron-right" aria-hidden="true"></span>
                    </button>
                }
            </div>
            <div class="col-sm-4 text-right">
                <div class="row form-group">
                    <label for="numResults" class="col-form-label col-form-label-sm col">Show:</label>
                    <select id="numResults" class="form-control form-control-sm" style="width:auto;" @onchange="ChangeTop">
                        <option value="10" selected=@(ListPrefsProvider.listPrefs.NumResults==10)>10</option>
                        <option value="25" selected=@(ListPrefsProvider.listPrefs.NumResults==25)>25</option>
                        <option value="50" selected=@(ListPrefsProvider.listPrefs.NumResults==50)>50</option>
                    </select>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<ClientInformationReadDto> clientInformationReadDto;
    private int matchingCount;

    [CascadingParameter]
    private ClientInformationListParent ListPrefsProvider { get; set; }

    private int skip = 0;


    private async Task FetchListAsync()
    {


        var response = await clientInformationService.GetClientInformationsAsync(ListPrefsProvider.listPrefs.OrderBy, skip, ListPrefsProvider.listPrefs.NumResults);

        matchingCount = response.Count;
        if (matchingCount == 0)
        {
            clientInformationReadDto = null;
        }
        else
        {
            clientInformationReadDto = response.ClientInformation;

        }
    }

    protected override async Task OnInitializedAsync()
    {
        await FetchListAsync();
    }

    private async Task ChangeOrder(ChangeEventArgs e)
    {
        ListPrefsProvider.listPrefs.OrderBy = e.Value.ToString();
        await ListPrefsProvider.SavePrefsAsync();
        skip = 0; //back to first page
        await FetchListAsync();
    }

    private async Task ChangeTop(ChangeEventArgs e)
    {
        ListPrefsProvider.listPrefs.NumResults = int.Parse(e.Value.ToString());
        await ListPrefsProvider.SavePrefsAsync();
        skip = 0; //back to first page
        await FetchListAsync();
    }

    private async Task PreviousPage()
    {
        skip -= ListPrefsProvider.listPrefs.NumResults;
        await FetchListAsync();
    }

    private async Task NextPage()
    {
        skip += ListPrefsProvider.listPrefs.NumResults;
        await FetchListAsync();
    }
}
