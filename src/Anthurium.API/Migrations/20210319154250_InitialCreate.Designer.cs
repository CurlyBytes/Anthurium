// <auto-generated />
using System;
using Anthurium.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Anthurium.API.Migrations
{
    [DbContext(typeof(AnthuriumContext))]
    [Migration("20210319154250_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Anthurium.Shared.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRecieve")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WarrantyDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AssetId");

                    b.HasIndex("ClientInformationId");

                    b.HasIndex("ItemId");

                    b.HasIndex("VendorId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            AssetId = 1,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(3861),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(3038),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4257),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "333-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2022, 11, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(2568)
                        },
                        new
                        {
                            AssetId = 2,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4742),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4728),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4752),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "111-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2023, 9, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4708)
                        },
                        new
                        {
                            AssetId = 3,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4761),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4760),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4762),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "444-222-3333-xxx-11",
                            VendorId = 0,
                            WarrantyDate = new DateTime(2023, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4759)
                        },
                        new
                        {
                            AssetId = 4,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4766),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4765),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4766),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "555-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2022, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4763)
                        },
                        new
                        {
                            AssetId = 5,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4770),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4769),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4771),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "666-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2023, 11, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4768)
                        },
                        new
                        {
                            AssetId = 6,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4774),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4773),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4775),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "777-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2022, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4772)
                        },
                        new
                        {
                            AssetId = 7,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4778),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4777),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4779),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "888-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2022, 5, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4776)
                        },
                        new
                        {
                            AssetId = 8,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4782),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4781),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4783),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "999-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2022, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4780)
                        },
                        new
                        {
                            AssetId = 9,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4786),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4785),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4786),
                            IsActive = true,
                            ItemId = 2,
                            SerialNumber = "1212-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2022, 6, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4784)
                        },
                        new
                        {
                            AssetId = 10,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4789),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4789),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4790),
                            IsActive = true,
                            ItemId = 2,
                            SerialNumber = "1111-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2022, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4787)
                        },
                        new
                        {
                            AssetId = 11,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4793),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4792),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4794),
                            IsActive = true,
                            ItemId = 2,
                            SerialNumber = "1313-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2022, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4791)
                        },
                        new
                        {
                            AssetId = 12,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4797),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4796),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4797),
                            IsActive = true,
                            ItemId = 2,
                            SerialNumber = "1414-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2023, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4795)
                        },
                        new
                        {
                            AssetId = 13,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4801),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4800),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4802),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "1515-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2023, 2, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4798)
                        },
                        new
                        {
                            AssetId = 14,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4805),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4804),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4806),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "1616-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2023, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4803)
                        },
                        new
                        {
                            AssetId = 15,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4810),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4809),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4811),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "1717-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2024, 11, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4807)
                        },
                        new
                        {
                            AssetId = 16,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4814),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4813),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4814),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "1818-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2022, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4812)
                        },
                        new
                        {
                            AssetId = 17,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4847),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4817),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4848),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "1919-222-3333-xxx-11",
                            VendorId = 0,
                            WarrantyDate = new DateTime(2022, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4816)
                        },
                        new
                        {
                            AssetId = 18,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4853),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4852),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4854),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "2020-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2022, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4850)
                        },
                        new
                        {
                            AssetId = 19,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4858),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4857),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4859),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "2121-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2022, 5, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4856)
                        },
                        new
                        {
                            AssetId = 20,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4863),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4862),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4864),
                            IsActive = true,
                            ItemId = 1,
                            SerialNumber = "2222-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2023, 11, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4860)
                        },
                        new
                        {
                            AssetId = 21,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4868),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4867),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4869),
                            IsActive = true,
                            ItemId = 2,
                            SerialNumber = "2323-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2022, 11, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4865)
                        },
                        new
                        {
                            AssetId = 22,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4873),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4872),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4874),
                            IsActive = true,
                            ItemId = 2,
                            SerialNumber = "2424-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2022, 11, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4871)
                        },
                        new
                        {
                            AssetId = 23,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4879),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4877),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4879),
                            IsActive = true,
                            ItemId = 2,
                            SerialNumber = "2525-222-3333-xxx-11",
                            VendorId = 2,
                            WarrantyDate = new DateTime(2022, 11, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4876)
                        },
                        new
                        {
                            AssetId = 24,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4884),
                            DateRecieve = new DateTime(2021, 2, 27, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4882),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4884),
                            IsActive = true,
                            ItemId = 2,
                            SerialNumber = "2626-222-3333-xxx-11",
                            VendorId = 1,
                            WarrantyDate = new DateTime(2022, 11, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(4881)
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.ClientInformation", b =>
                {
                    b.Property<int>("ClientInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("varchar(450) CHARACTER SET utf8mb4")
                        .HasMaxLength(450);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("ContactEmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ClientInformationId");

                    b.ToTable("ClientInformations");

                    b.HasData(
                        new
                        {
                            ClientInformationId = 1,
                            CompanyAddress = "eduardo aboitiz street",
                            CompanyName = "AMA",
                            ContactEmailAddress = "test@rrr.com",
                            ContactNumber = "1134455",
                            ContactPerson = "Tao yang",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(2216),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(2615),
                            IsActive = true
                        },
                        new
                        {
                            ClientInformationId = 2,
                            CompanyAddress = "107 v. raman st. calamba cc",
                            CompanyName = "CurlyBytes",
                            ContactEmailAddress = "bbb@bb.com",
                            ContactNumber = "09866191",
                            ContactPerson = "bob uy",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(3092),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(3103),
                            IsActive = true
                        },
                        new
                        {
                            ClientInformationId = 3,
                            CompanyAddress = "United States America",
                            CompanyName = "Microsoft",
                            ContactEmailAddress = "CC@cc.com",
                            ContactNumber = "1134455",
                            ContactPerson = "sicnarf noyag",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(3110),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(3111),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.DeliveryReceipt", b =>
                {
                    b.Property<int>("DeliveryReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientInformationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateRecieve")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("JobQuotationId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("DeliveryReceiptId");

                    b.HasIndex("ClientInformationId");

                    b.HasIndex("JobQuotationId");

                    b.ToTable("DeliveryReceipts");

                    b.HasData(
                        new
                        {
                            DeliveryReceiptId = 1,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(6226),
                            DateRecieve = new DateTime(2021, 2, 22, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(5377),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(6625),
                            IsActive = true,
                            JobQuotationId = 1,
                            Remarks = "All mouse"
                        },
                        new
                        {
                            DeliveryReceiptId = 2,
                            ClientInformationId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(7094),
                            DateRecieve = new DateTime(2021, 3, 4, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(7059),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(7100),
                            IsActive = true,
                            JobQuotationId = 1,
                            Remarks = "All keyboard"
                        },
                        new
                        {
                            DeliveryReceiptId = 3,
                            ClientInformationId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(7110),
                            DateRecieve = new DateTime(2021, 3, 4, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(7109),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(7111),
                            IsActive = true,
                            JobQuotationId = 12,
                            Remarks = "All mouse"
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.DeliveryReceiptDetails", b =>
                {
                    b.Property<int>("DeliveryReceiptDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DeliveryReceiptId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("DeliveryReceiptDetailsId");

                    b.HasIndex("DeliveryReceiptId");

                    b.HasIndex("ItemId");

                    b.ToTable("DeliveryReceiptDetailss");

                    b.HasData(
                        new
                        {
                            DeliveryReceiptDetailsId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(2262),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(2695),
                            DeliveryReceiptId = 1,
                            IsActive = true,
                            ItemId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            DeliveryReceiptDetailsId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(3157),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(3170),
                            DeliveryReceiptId = 1,
                            IsActive = true,
                            ItemId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            DeliveryReceiptDetailsId = 3,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(3178),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(3179),
                            DeliveryReceiptId = 2,
                            IsActive = true,
                            ItemId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            DeliveryReceiptDetailsId = 4,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(3180),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(3181),
                            DeliveryReceiptId = 2,
                            IsActive = true,
                            ItemId = 2,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("ItemGroup")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(8131),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(8530),
                            IsActive = true,
                            ItemCode = "m-cs-1",
                            ItemGroup = "Computer Set",
                            ItemName = "Razer x123",
                            ItemType = "Mouse",
                            WarehouseId = 1
                        },
                        new
                        {
                            ItemId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(8976),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(8987),
                            IsActive = true,
                            ItemCode = "m-cs-1",
                            ItemGroup = "Computer Set",
                            ItemName = "Jedel z31",
                            ItemType = "Mouse",
                            WarehouseId = 1
                        },
                        new
                        {
                            ItemId = 3,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9054),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9055),
                            IsActive = false,
                            ItemCode = "m-cs-1",
                            ItemGroup = "Computer Set",
                            ItemName = "Razer x33",
                            ItemType = "Mouse",
                            WarehouseId = 1
                        },
                        new
                        {
                            ItemId = 4,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9057),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9058),
                            IsActive = true,
                            ItemCode = "m-cs-1",
                            ItemGroup = "Computer Set",
                            ItemName = "Jedel z524",
                            ItemType = "Mouse",
                            WarehouseId = 1
                        },
                        new
                        {
                            ItemId = 5,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9059),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9060),
                            IsActive = true,
                            ItemCode = "m-cs-1",
                            ItemGroup = "Computer Set",
                            ItemName = "Razer x123",
                            ItemType = "Mouse",
                            WarehouseId = 2
                        },
                        new
                        {
                            ItemId = 6,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9061),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9061),
                            IsActive = true,
                            ItemCode = "m-cs-1",
                            ItemGroup = "Computer Set",
                            ItemName = "Jedel z31",
                            ItemType = "Mouse",
                            WarehouseId = 2
                        },
                        new
                        {
                            ItemId = 7,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9063),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9063),
                            IsActive = true,
                            ItemCode = "m-cs-1",
                            ItemGroup = "Computer Set",
                            ItemName = "Razer x33",
                            ItemType = "Mouse",
                            WarehouseId = 2
                        },
                        new
                        {
                            ItemId = 8,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9064),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(9065),
                            IsActive = true,
                            ItemCode = "m-cs-1",
                            ItemGroup = "Computer Set",
                            ItemName = "Jedel z524",
                            ItemType = "Mouse",
                            WarehouseId = 2
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.JobOrder", b =>
                {
                    b.Property<int>("JobOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("varchar(450) CHARACTER SET utf8mb4")
                        .HasMaxLength(450);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateSchedule")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JoboRderDescription")
                        .IsRequired()
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<int>("RemainingHours")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnded")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TimeStarted")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.HasKey("JobOrderId");

                    b.HasIndex("ClientInformationId");

                    b.ToTable("JobOrders");

                    b.HasData(
                        new
                        {
                            JobOrderId = 1,
                            ClientInformationId = 1,
                            CompanyAddress = "eduardo aboitiz street",
                            CompanyName = "AMA",
                            ContactNumber = "+0639207082",
                            ContactPerson = "amaers",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(8664),
                            DateSchedule = new DateTime(2021, 3, 21, 22, 42, 49, 967, DateTimeKind.Utc).AddTicks(6113),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9043),
                            IsActive = true,
                            JoboRderDescription = "another work heree",
                            RemainingHours = 2,
                            TimeEnded = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(7601),
                            TimeStarted = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(7219),
                            TotalHours = 2
                        },
                        new
                        {
                            JobOrderId = 2,
                            ClientInformationId = 1,
                            CompanyAddress = "eduardo aboitiz street",
                            CompanyName = "AMA",
                            ContactNumber = "+0639207082",
                            ContactPerson = "amaers",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9523),
                            DateSchedule = new DateTime(2021, 3, 21, 19, 42, 49, 967, DateTimeKind.Utc).AddTicks(9472),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9530),
                            IsActive = true,
                            JoboRderDescription = "this a manual work here",
                            RemainingHours = 4,
                            TimeEnded = new DateTime(2021, 3, 21, 2, 42, 49, 967, DateTimeKind.Utc).AddTicks(9505),
                            TimeStarted = new DateTime(2021, 3, 20, 3, 42, 49, 967, DateTimeKind.Utc).AddTicks(9498),
                            TotalHours = 31
                        },
                        new
                        {
                            JobOrderId = 3,
                            ClientInformationId = 1,
                            CompanyAddress = "eduardo aboitiz street",
                            CompanyName = "AMA",
                            ContactNumber = "+0639207082",
                            ContactPerson = "amaers",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9542),
                            DateSchedule = new DateTime(2021, 3, 22, 5, 42, 49, 967, DateTimeKind.Utc).AddTicks(9539),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9543),
                            IsActive = true,
                            JoboRderDescription = "this a manual work here",
                            RemainingHours = 4,
                            TimeEnded = new DateTime(2021, 3, 19, 17, 42, 49, 967, DateTimeKind.Utc).AddTicks(9541),
                            TimeStarted = new DateTime(2021, 3, 19, 16, 42, 49, 967, DateTimeKind.Utc).AddTicks(9540),
                            TotalHours = 1
                        },
                        new
                        {
                            JobOrderId = 4,
                            ClientInformationId = 2,
                            CompanyAddress = "107 v. raman st. calamba cc",
                            CompanyName = "CurlyBytes",
                            ContactNumber = "4177214",
                            ContactPerson = "Cocoy",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9547),
                            DateSchedule = new DateTime(2021, 4, 19, 13, 42, 49, 967, DateTimeKind.Utc).AddTicks(9544),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9547),
                            IsActive = true,
                            JoboRderDescription = "lazy work",
                            RemainingHours = 1,
                            TimeEnded = new DateTime(2021, 3, 19, 17, 42, 49, 967, DateTimeKind.Utc).AddTicks(9546),
                            TimeStarted = new DateTime(2021, 3, 19, 16, 42, 49, 967, DateTimeKind.Utc).AddTicks(9545),
                            TotalHours = 1
                        },
                        new
                        {
                            JobOrderId = 5,
                            ClientInformationId = 2,
                            CompanyAddress = "107 v. raman st. calamba cc",
                            CompanyName = "CurlyBytes",
                            ContactNumber = "4177214",
                            ContactPerson = "Cacay",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9551),
                            DateSchedule = new DateTime(2021, 3, 28, 2, 42, 49, 967, DateTimeKind.Utc).AddTicks(9548),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9552),
                            IsActive = true,
                            JoboRderDescription = "job order",
                            RemainingHours = 4,
                            TimeEnded = new DateTime(2021, 3, 21, 9, 42, 49, 967, DateTimeKind.Utc).AddTicks(9550),
                            TimeStarted = new DateTime(2021, 3, 20, 2, 42, 49, 967, DateTimeKind.Utc).AddTicks(9549),
                            TotalHours = 3
                        },
                        new
                        {
                            JobOrderId = 6,
                            ClientInformationId = 3,
                            CompanyAddress = "United States America",
                            CompanyName = "Microsoft",
                            ContactNumber = "21141",
                            ContactPerson = "Trump",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9556),
                            DateSchedule = new DateTime(2021, 4, 2, 11, 42, 49, 967, DateTimeKind.Utc).AddTicks(9553),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 967, DateTimeKind.Utc).AddTicks(9556),
                            IsActive = true,
                            JoboRderDescription = "test work",
                            RemainingHours = 4,
                            TimeEnded = new DateTime(2021, 3, 20, 3, 42, 49, 967, DateTimeKind.Utc).AddTicks(9555),
                            TimeStarted = new DateTime(2021, 3, 19, 16, 42, 49, 967, DateTimeKind.Utc).AddTicks(9554),
                            TotalHours = 8
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.JobOrderDescriptionOfWork", b =>
                {
                    b.Property<int>("JobOrderDescriptionOfWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("JobOrderId")
                        .HasColumnType("int");

                    b.Property<string>("JobOrderTypeOfWOrk")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("JobOrderDescriptionOfWorkId");

                    b.HasIndex("JobOrderId");

                    b.ToTable("JobOrderDescriptionOfWorks");
                });

            modelBuilder.Entity("Anthurium.Shared.Models.JobQuotation", b =>
                {
                    b.Property<int>("JobQuotationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("varchar(450) CHARACTER SET utf8mb4")
                        .HasMaxLength(450);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("ContactEmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(400) CHARACTER SET utf8mb4")
                        .HasMaxLength(400);

                    b.Property<bool>("HasCustomerAlreadyAgreed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("OverallCost")
                        .HasColumnType("double");

                    b.HasKey("JobQuotationId");

                    b.HasIndex("ClientInformationId");

                    b.ToTable("JobQuotations");

                    b.HasData(
                        new
                        {
                            JobQuotationId = 1,
                            ClientInformationId = 1,
                            CompanyAddress = "eduardo aboitiz street",
                            CompanyName = "AMA",
                            ContactEmailAddress = "tset@tset.com",
                            ContactNumber = "+0639207082",
                            ContactPerson = "amaers",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 968, DateTimeKind.Utc).AddTicks(4321),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 968, DateTimeKind.Utc).AddTicks(4721),
                            Description = "Sample Job Quotation From AMA",
                            HasCustomerAlreadyAgreed = true,
                            IsActive = true,
                            OverallCost = 100.0
                        },
                        new
                        {
                            JobQuotationId = 2,
                            ClientInformationId = 1,
                            CompanyAddress = "eduardo aboitiz street",
                            CompanyName = "AMA",
                            ContactEmailAddress = "aaa@tset.com",
                            ContactNumber = "+0639207082",
                            ContactPerson = "amaers",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 968, DateTimeKind.Utc).AddTicks(5277),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 968, DateTimeKind.Utc).AddTicks(5287),
                            Description = "Sample Job Quotation From AMA",
                            HasCustomerAlreadyAgreed = false,
                            IsActive = true,
                            OverallCost = 200.0
                        },
                        new
                        {
                            JobQuotationId = 3,
                            ClientInformationId = 2,
                            CompanyAddress = "107 v. raman st. calamba cc",
                            CompanyName = "CurlyBytes",
                            ContactEmailAddress = "fff@tset.com",
                            ContactNumber = "4177214",
                            ContactPerson = "Cocoy",
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 968, DateTimeKind.Utc).AddTicks(5296),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 968, DateTimeKind.Utc).AddTicks(5296),
                            Description = "CurlyBytes JobQuote",
                            HasCustomerAlreadyAgreed = true,
                            IsActive = true,
                            OverallCost = 300.0
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.JobQuotationDetails", b =>
                {
                    b.Property<int>("JobQuotationDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAlreadyPurchaseOrder")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150);

                    b.Property<int>("JobQuotationId")
                        .HasColumnType("int");

                    b.Property<double>("MarginPrice")
                        .HasColumnType("double");

                    b.Property<double>("OriginalPrice")
                        .HasColumnType("double");

                    b.Property<string>("PurchaseOrderCode")
                        .HasColumnType("varchar(75) CHARACTER SET utf8mb4")
                        .HasMaxLength(75);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("SellingPrice")
                        .HasColumnType("double");

                    b.Property<double>("TotalCost")
                        .HasColumnType("double");

                    b.HasKey("JobQuotationDetailsId");

                    b.HasIndex("ItemId");

                    b.HasIndex("JobQuotationId");

                    b.ToTable("JobQuotationDetailss");

                    b.HasData(
                        new
                        {
                            JobQuotationDetailsId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(214),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(613),
                            IsActive = true,
                            IsAlreadyPurchaseOrder = true,
                            ItemId = 1,
                            ItemName = "Razer x123",
                            JobQuotationId = 1,
                            MarginPrice = 100.0,
                            OriginalPrice = 20.0,
                            PurchaseOrderCode = "ffff-111",
                            Quantity = 2,
                            SellingPrice = 120.0,
                            TotalCost = 240.0
                        },
                        new
                        {
                            JobQuotationDetailsId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1146),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1156),
                            IsActive = true,
                            IsAlreadyPurchaseOrder = true,
                            ItemId = 2,
                            ItemName = "Jedel z31",
                            JobQuotationId = 1,
                            MarginPrice = 30.0,
                            OriginalPrice = 200.0,
                            PurchaseOrderCode = "ffff-111",
                            Quantity = 1,
                            SellingPrice = 230.0,
                            TotalCost = 230.0
                        },
                        new
                        {
                            JobQuotationDetailsId = 3,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1165),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1166),
                            IsActive = true,
                            IsAlreadyPurchaseOrder = false,
                            ItemId = 3,
                            ItemName = "Razer x33",
                            JobQuotationId = 1,
                            MarginPrice = 20.0,
                            OriginalPrice = 100.0,
                            PurchaseOrderCode = "",
                            Quantity = 3,
                            SellingPrice = 120.0,
                            TotalCost = 360.0
                        },
                        new
                        {
                            JobQuotationDetailsId = 4,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1168),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1169),
                            IsActive = true,
                            IsAlreadyPurchaseOrder = true,
                            ItemId = 4,
                            ItemName = "Jedel z524",
                            JobQuotationId = 2,
                            MarginPrice = 30.0,
                            OriginalPrice = 200.0,
                            PurchaseOrderCode = "ffff-111",
                            Quantity = 3,
                            SellingPrice = 230.0,
                            TotalCost = 390.0
                        },
                        new
                        {
                            JobQuotationDetailsId = 5,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1170),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1171),
                            IsActive = true,
                            IsAlreadyPurchaseOrder = false,
                            ItemId = 5,
                            ItemName = "Razer x123",
                            JobQuotationId = 2,
                            MarginPrice = 30.0,
                            OriginalPrice = 200.0,
                            PurchaseOrderCode = "",
                            Quantity = 2,
                            SellingPrice = 230.0,
                            TotalCost = 460.0
                        },
                        new
                        {
                            JobQuotationDetailsId = 6,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1172),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 969, DateTimeKind.Utc).AddTicks(1173),
                            IsActive = true,
                            IsAlreadyPurchaseOrder = false,
                            ItemId = 6,
                            ItemName = "Razer x33",
                            JobQuotationId = 3,
                            MarginPrice = 20.0,
                            OriginalPrice = 100.0,
                            PurchaseOrderCode = "",
                            Quantity = 1,
                            SellingPrice = 120.0,
                            TotalCost = 120.0
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Anthurium.Shared.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("VendorId");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(9217),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 965, DateTimeKind.Utc).AddTicks(9617),
                            IsActive = true,
                            VendorCode = "MS",
                            VendorName = "Microsoft"
                        },
                        new
                        {
                            VendorId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(50),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 966, DateTimeKind.Utc).AddTicks(62),
                            IsActive = true,
                            VendorCode = "DL1",
                            VendorName = "Dell"
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseId = 1,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 963, DateTimeKind.Utc).AddTicks(7925),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 963, DateTimeKind.Utc).AddTicks(8393),
                            IsActive = true,
                            WarehouseCode = "t-w-1",
                            WarehouseName = "The warehouse 1"
                        },
                        new
                        {
                            WarehouseId = 2,
                            DateCreated = new DateTime(2021, 3, 19, 15, 42, 49, 963, DateTimeKind.Utc).AddTicks(8867),
                            DateUpdated = new DateTime(2021, 3, 19, 15, 42, 49, 963, DateTimeKind.Utc).AddTicks(8880),
                            IsActive = true,
                            WarehouseCode = "t-w-2",
                            WarehouseName = "The warehouse 2"
                        });
                });

            modelBuilder.Entity("Anthurium.Shared.Models.Asset", b =>
                {
                    b.HasOne("Anthurium.Shared.Models.ClientInformation", "ClientInformation")
                        .WithMany("Asset")
                        .HasForeignKey("ClientInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anthurium.Shared.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anthurium.Shared.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anthurium.Shared.Models.DeliveryReceipt", b =>
                {
                    b.HasOne("Anthurium.Shared.Models.ClientInformation", "ClientInformation")
                        .WithMany("DeliveryReceipt")
                        .HasForeignKey("ClientInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anthurium.Shared.Models.JobQuotation", "JobQuotation")
                        .WithMany("DeliveryReceipt")
                        .HasForeignKey("JobQuotationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anthurium.Shared.Models.DeliveryReceiptDetails", b =>
                {
                    b.HasOne("Anthurium.Shared.Models.DeliveryReceipt", "DeliveryReceipt")
                        .WithMany("DeliveryRecieptDetails")
                        .HasForeignKey("DeliveryReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anthurium.Shared.Models.Item", "Item")
                        .WithMany("DeliveryRecieptDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anthurium.Shared.Models.Item", b =>
                {
                    b.HasOne("Anthurium.Shared.Models.Warehouse", "Warehouse")
                        .WithMany("Item")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anthurium.Shared.Models.JobOrder", b =>
                {
                    b.HasOne("Anthurium.Shared.Models.ClientInformation", "ClientInformation")
                        .WithMany("JobOrder")
                        .HasForeignKey("ClientInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anthurium.Shared.Models.JobOrderDescriptionOfWork", b =>
                {
                    b.HasOne("Anthurium.Shared.Models.JobOrder", "JobOrder")
                        .WithMany("JobOrderDescriptionOfWork")
                        .HasForeignKey("JobOrderId");
                });

            modelBuilder.Entity("Anthurium.Shared.Models.JobQuotation", b =>
                {
                    b.HasOne("Anthurium.Shared.Models.ClientInformation", "ClientInformation")
                        .WithMany("JobQuotation")
                        .HasForeignKey("ClientInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Anthurium.Shared.Models.JobQuotationDetails", b =>
                {
                    b.HasOne("Anthurium.Shared.Models.Item", "Item")
                        .WithMany("JobQuotationDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Anthurium.Shared.Models.JobQuotation", "JobQuotation")
                        .WithMany("JobQuotationDetails")
                        .HasForeignKey("JobQuotationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
