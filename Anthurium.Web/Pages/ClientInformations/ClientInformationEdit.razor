@page "/clientinformation/{Id:int}/edit"
@inject Services.ClientInformationService clientInformationtService
@using AutoMapper;
@inject IMapper _mapper;
@using System.Text.Json
@using Anthurium.API.Dtos
@inject NavigationManager NavManager
@inject IToastService toastService

<h3>Edit Client Information</h3>
@if (clientInformationReadDto == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-sm-8 text-right">
            <a href="/clientinformation/@clientInformationReadDto.ClientInformationId/delete">delete</a>
        </div>
    </div>
    <div style="max-width: 400px;">
        <EditForm Model="@clientInformationUpdateDto" OnValidSubmit="@UpdateClientInformation">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group row">
                <label for="companyName" class="col-sm-6 col-form-label">Company Name:</label>
                <input id="companyName" class="form-control col-sm-6 input-lg" type="text" disabled="@isSuccess"
                       @bind="clientInformationUpdateDto.CompanyName" />
            </div>
            <div class="form-group row">
                <label for="companyAddress" class="col-sm-6 col-form-label">Company Address:</label>
                <input id="companyAddress" class="form-control col-sm-6 input-lg" type="text" disabled="@isSuccess"
                       @bind="clientInformationUpdateDto.CompanyAddress" />
            </div>
            <button class="btn btn-primary" type="submit" disabled="@isSuccess">Submit</button>
            <div class="alert @(isSuccess?"alert-success":"alert-danger")" style="margin-top:1rem" role="alert"
                 hidden="@(message=="")">@message</div>
            </EditForm>
        </div>
        <div class="row">
            <div class="col-12">
                <a href="/clientinformation">Return to List</a>
            </div>
        </div>
    }


@code {
    [Parameter]
    public int Id { get; set; }

    private bool isSuccess = false;
    private string message = "";

    private ClientInformationUpdateDto clientInformationUpdateDto { get; set; } = new ClientInformationUpdateDto();
    private ClientInformationReadDto clientInformationReadDto { get; set; } = new ClientInformationReadDto();

    protected override async Task OnInitializedAsync()
    {
        clientInformationReadDto = await clientInformationtService.GetClientInformationByIdAsync(Id);
        _mapper.Map(clientInformationReadDto, clientInformationUpdateDto);
    }

    public async void UpdateClientInformation()
    {


        //returns response message, so can check if success
        var response = await clientInformationtService.EditClientInformationAsync(Id, clientInformationUpdateDto);
        if (response.IsSuccessStatusCode)
        {
            isSuccess = true;
            message = $"Success";
            toastService.ShowInfo($" {clientInformationUpdateDto.CompanyName} is Updated.");
            NavManager.NavigateTo("/clientinformation");
            //navigate to single page
            //perhaps set flag (success) there that will display message if coming from this page
        }
        else
            message = $"Error: {response.StatusCode.ToString()}. Please try again.";
        this.StateHasChanged();
    }
}